    当多个线程调用同一个方法时，为了避免数据交叉，使用synchronized关键字来进行同步
    为了防止出现脏读，需要在get方法上面也进行同步

    当A线程调用anyObject对象加入synchronized关键字的X方法时候，A线程就获得了X方法锁，但是线程B可以随意
调用其他的非synchronized关键字的方法

    当A线程调用anyObject对象加入synchronized关键字的X方法时候，A线程就获得了X方法锁，所以其他线程必须
等待A线程执行完毕才可以调用X方法，而线程B如果调用了synchronized的非X方法时，必须等待A线程执行完毕，也就是
释放对象锁之后才可以调用，这时候A线程已经执行了一个完整的任务，就不会存在数据交叉访问。